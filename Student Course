public class StudentCourseController : Controller
{
    private readonly CourseDbContext _dbContext;

    public StudentCourseController(CourseDbContext dbContext)
    {
        _dbContext = dbContext;
    }

    public IActionResult Index()
    {
        var courses = _dbContext.Courses.ToList();
        return View(courses);
    }

    public IActionResult Enroll(int id)
    {
        // Retrieve student information (e.g., from ASP.NET Identity)
        var studentId = GetCurrentStudentId();

        // Find the course
        var course = _dbContext.Courses.Find(id);
        if (course == null)
        {
            return NotFound();
        }

        // Check if the course has reached its maximum capacity
        if (course.Enrollments.Count >= course.MaxCapacity)
        {
            ViewBag.Message = "Sorry, the course is already at its maximum capacity.";
            return View("Index", _dbContext.Courses.ToList());
        }

        // Check if the student is already enrolled in the course
        var isEnrolled = _dbContext.Enrollments.Any(e => e.CourseId == id && e.StudentId == studentId);
        if (isEnrolled)
        {
            ViewBag.Message = "You are already enrolled in this course.";
        }
        else
        {
            // Perform the enrollment
            _dbContext.Enrollments.Add(new Enrollment { CourseId = id, StudentId = studentId });
            _dbContext.SaveChanges();
            ViewBag.Message = "Enrollment successful.";
        }

        return View("Index", _dbContext.Courses.ToList());
    }
}
